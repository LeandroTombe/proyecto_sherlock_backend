
services:
  auth-service:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_JWT_SECRET_KEY=tu_clave_secreta_super_segura
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_db
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "flask db migrate -m 'initial migration' &&
             flask db upgrade &&
             gunicorn --bind 0.0.0.0:5000 --workers 4 'main:create_app()'"

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      auth-service:
        condition: service_healthy
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  postgres_data: 